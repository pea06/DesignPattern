싱글톤 패턴
애플리케이션이 시작될때 어떤 클래스가 최초 한번만 static 으로 메모리를 할당 하고 해당 메모리에 인스턴스를
만들어 사용하는 패턴

즉, '하나'의 인스턴스를 생성해 사용하는 디자인 패턴, 인스턴스가 필요할때 새로운 인스턴스를 만들지 않고 기존의 인스턴스를 활용

장정 : 한번의 new 연산자로 메모리 낭비 방지 가능,
      싱글톤으로 만들어진 클래스의 인스턴스는 전역 인스턴스이기 때문에 다른 클래스의 인스턴스들이 데이터를 공유하기 쉽다.
      이미 생성된 인스턴스를 사용하기 때문에 속도가 빠르다
단점 : 싱글톤 인스턴스가 너무 많은 일을 할경우 다른 클래스의 인스턴스 간에 결합도가 높아져 개방-폐쇠 원칙을 위배 하게 된다
      멀티 쓰레딩 환경에서 동기화 처리를 안하면 동기화 처리를 안하면 예외가 발생할수 있음 ex) 인스턴스가 2개 생성됌


